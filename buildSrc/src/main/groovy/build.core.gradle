import java.nio.file.Files
import java.nio.file.Paths

plugins {
  id 'build.infos'
  id 'build.repositories'
}

static boolean isEnable(Object value) {
  if (value == null) {
    return false
  }
  if (value instanceof Boolean) {
    return value
  }
  String valueToString = value.toString().trim()
  return valueToString.equalsIgnoreCase("true") ||
    valueToString.equalsIgnoreCase("yes") ||
    valueToString.equalsIgnoreCase("enbale") ||
    valueToString.equalsIgnoreCase("1") ||
    valueToString.equalsIgnoreCase("t") ||
    valueToString.equalsIgnoreCase("open")
}

static def currentGradleDirectoryPath(buildscript) {
  java.nio.file.Path sourcePath = buildscript.sourceFile.toPath()
  def parent = sourcePath.getParent()
  return parent.toString() + File.separator
}

static String readFileAsString(String path, String charset) {
  return new String(Files.readAllBytes(
    Paths.get(path)
  ), charset)
}

ext["utils"] = [
  isEnable                  : this.&isEnable,
  currentGradleDirectoryPath: this.&currentGradleDirectoryPath,
  readFileAsString          : this.&readFileAsString,
]

class Printer {

  def info(message) {
    println(">> info: $message")
  }
}

ext["printer"] = new Printer()